@model CollegeManagemetSystem.WebApplication.Models.StudentModel

@{
    ViewBag.Title = "AddStudent";
}

<h2>AddStudent</h2>


@using(Html.BeginForm())
    {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>StudentModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new
       {
       @class = "text-danger"
       })

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new
           {
           @class = "control-label col-md-2"
           })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new
               {
               htmlAttributes = new
                   {
                   @class = "form-control"
                   }
               })
                @Html.ValidationMessageFor(model => model.FirstName, "", new
               {
               @class = "text-danger"
               })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new
           {
           @class = "control-label col-md-2"
           })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new
               {
               htmlAttributes = new
                   {
                   @class = "form-control"
                   }
               })
                @Html.ValidationMessageFor(model => model.LastName, "", new
               {
               @class = "text-danger"
               })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new
           {
           @class = "control-label col-md-2"
           })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new
               {
               htmlAttributes = new
                   {
                   @class = "form-control"
                   }
               })
                @Html.ValidationMessageFor(model => model.Email, "", new
               {
               @class = "text-danger"
               })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new
           {
           @class = "control-label col-md-2"
           })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.RadioButtonFor(model => model.Gender, "Male")
                Male
                @Html.RadioButtonFor(model => model.Gender, "Female")
                Female
                @Html.ValidationMessageFor(model => model.Gender, "", new
               {
               @class = "text-danger"
               })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Branchid, htmlAttributes: new
           {
           @class = "control-label col-md-2"
           })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Branchid, new
               {
               htmlAttributes = new
                   {
                   @class = "form-control"
                   }
               })

                @*@Html.DropDownListFor(model => model.Branchid, new SelectList(ViewBag.List, "BranchName", "BranchId"), "Select Branch")*@
                @*@Html.DropDownList("BranchName", new SelectList(ViewBag.BranchName), "Select Branch");*@

                @Html.ValidationMessageFor(model => model.Branchid, "", new
               {
               @class = "text-danger"
               })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new
           {
           @class = "control-label col-md-2"
           })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new
               {
               htmlAttributes = new
                   {
                   @class = "form-control"
                   }
               })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new
               {
               @class = "text-danger"
               })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new
           {
           @class = "control-label col-md-2"
           })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new
               {
               htmlAttributes = new
                   {
                   @class = "form-control"
                   }
               })
                @Html.ValidationMessageFor(model => model.Age, "", new
               {
               @class = "text-danger"
               })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

        @*tried*@         @*<input type="button" id="btnValidate" value="Submit" onclick=" confirmation()" />*@

        @* <script>
                 function confirmation() {
                     return confirm("confirm submission?")
                 }
            </script>*@

        @* <div>
            <script>
                src = "validationscript/addStudentValidation.js"
            </script>
        </div>*@
    </div>
    }


<div>
    @Html.ActionLink("Back to HomePage", "HomePage")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
